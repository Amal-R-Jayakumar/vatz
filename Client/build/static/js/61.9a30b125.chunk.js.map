{"version":3,"sources":["views/signin/employee/SignIn.js","assets/svgs/logo.svg"],"names":["SignIn","history","useState","showLoader","setShowLoader","isSubmitted","setIsSubmitted","SignInSchema","Yup","shape","email","required","password","Fragment","className","to","src","logo","alt","style","height","initialValues","validationSchema","onSubmit","values","params","callApi","ApiConstants","auth","employeelogin","then","response","redirectRoute","status_code","userObj","payload","sessionStorage","setItem","JSON","stringify","localStorage","user_role_id","push","showNotification","message","catch","error","errors","color","type","placeholder","name","tabIndex","msg","fontSize","id","htmlFor","width","fontWeight","onClick"],"mappings":"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","file":"static/js/61.9a30b125.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { showNotification } from \"../../../services/toasterService\";\nimport { callApi } from \"../../../services/apiService\";\nimport { ApiConstants } from \"../../../config/apiConstants\";\nimport Spinner from \"../../../components/Spinner\";\n\nimport logo from \"../../../assets/svgs/logo.svg\";\n\nconst SignIn = ({ history }) => {\n  const [showLoader, setShowLoader] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const onSubmit = (values) => {\n    setShowLoader(true);\n    let params = {\n      email: values.email,\n      password: values.password,\n    };\n    callApi(\"post\", ApiConstants.auth.employeelogin, params)\n      .then((response) => {\n        let redirectRoute = \"\";\n        if (response && response.status_code === 200) {\n          setShowLoader(false);\n          let userObj = response.payload;\n          sessionStorage.setItem(\"auth\", true);\n          sessionStorage.setItem(\"user\", JSON.stringify(response.payload));\n          localStorage.setItem(\"auth\", true);\n          localStorage.setItem(\"user\", JSON.stringify(response.payload));\n          switch (userObj.user_role_id) {\n            case 1:\n              redirectRoute = \"/admin/dashboard\";\n              break;\n            case 2:\n              redirectRoute = \"/admin/dashboard\";\n              break;\n            case 3:\n              redirectRoute = \"/checker/dashboard\";\n              break;\n            case 4:\n              redirectRoute = \"/validator/dashboard\";\n              break;\n          }\n          history.push(redirectRoute);\n        } else {\n          setShowLoader(false);\n          showNotification(\"Error\", response.message, \"error\");\n        }\n      })\n      .catch((error) => {\n        setShowLoader(false);\n        showNotification(\"Error\", \"Something went wrong\", \"error\");\n      });\n  };\n\n  let SignInSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(\"Please enter Email \")\n      .email(\"Please enter a valid Email\"),\n    password: Yup.string().required(\"Please enter Password\"),\n  });\n\n  return (\n    <React.Fragment>\n      {showLoader && <Spinner />}\n      <div className=\"auth-content\">\n        <div className=\"text-center mb-4 text-white\">\n          <h4 className=\"text-white\">Employee Login</h4>\n          <div className=\"mt-3\">Sign in to your account to continue</div>\n        </div>\n        <div className=\"card rounded\">\n          <div className=\"card-body\">\n            <div className=\"mb-3 text-center\">\n              <Link to=\"/home\">\n                <img src={logo} alt=\"Logo\" style={{ height: 70 }} />\n              </Link>\n            </div>\n\n            <Formik\n              initialValues={{\n                email: \"\",\n                password: \"\",\n              }}\n              validationSchema={SignInSchema}\n              onSubmit={(values) => onSubmit(values)}>\n              {({ errors }) => (\n                <Form>\n                  <h5 className=\"mb-3\" style={{ color: \"#096DA9\" }}>\n                    Sign in\n                  </h5>\n                  <div className=\"input-group mb-3\">\n                    <Field\n                      type=\"text\"\n                      className={`form-control ${errors.email && isSubmitted ? \"is-invalid\" : \"\"\n                        }`}\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      tabIndex={1}\n                    />\n                    <ErrorMessage name=\"email\">\n                      {(msg) => <div className=\"invalid-feedback\">{msg}</div>}\n                    </ErrorMessage>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <Field\n                      type=\"password\"\n                      className={`form-control ${errors.password && isSubmitted ? \"is-invalid\" : \"\"\n                        }`}\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      tabIndex={1}\n                    />\n                    <ErrorMessage name=\"password\">\n                      {(msg) => <div className=\"invalid-feedback\">{msg}</div>}\n                    </ErrorMessage>\n                  </div>\n                  <p className=\"mb-4\">\n                    <NavLink\n                      style={{ color: \"#096DA9\", fontSize: 13 }}\n                      to=\"/forgot-password\">\n                      Forgot password?\n                    </NavLink>\n                  </p>\n                  <div className=\"form-group\">\n                    <div className=\"checkbox d-flex p-0\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"checkbox-fill-1\"\n                        id=\"checkbox-fill-a1\"\n                      />\n                      <label htmlFor=\"checkbox-fill-a1\" className=\"cr\">\n                        Remember me next time\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"form-group text-center\">\n                    <button\n                      type=\"submit\"\n                      style={{ width: 180, fontWeight: \"bold\" }}\n                      className=\"btn btn-primary shadow-2 my-3\"\n                      onClick={() => setIsSubmitted(true)}>\n                      Sign In\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SignIn;\n","export default __webpack_public_path__ + \"static/media/logo.3e0a7e23.svg\";"],"sourceRoot":""}