{"version":3,"sources":["views/forgotpassword/index.js","assets/svgs/logo.svg"],"names":["SignIn","history","useState","showLoader","setShowLoader","isSubmitted","setIsSubmitted","ForgotSchema","Yup","shape","email","required","Fragment","className","to","src","logo","alt","style","height","initialValues","validationSchema","onSubmit","values","callApi","ApiConstants","auth","forgotpassword","then","response","status_code","showNotification","message","goBack","catch","error","console","log","errors","type","placeholder","name","tabIndex","msg","width","fontWeight","onClick"],"mappings":"oNA6EeA,UAjEA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAChB,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAsBIC,EAAeC,MAAaC,MAAM,CACrCC,MAAOF,MAAaG,SAAS,uBAAuBD,MAAM,gCAG3D,OACC,eAAC,IAAME,SAAP,WACET,GAAc,cAAC,IAAD,IACf,sBAAKU,UAAU,eAAf,UACC,qBAAKA,UAAU,8BAAf,SACC,oBAAIA,UAAU,aAAd,gCAED,qBAAKA,UAAU,eAAf,SACC,sBAAKA,UAAU,YAAf,UACC,qBAAKA,UAAU,mBAAf,SACC,cAAC,IAAD,CAAMC,GAAG,QAAT,SACC,qBAAKC,IAAKC,IAAMC,IAAI,OAAOC,MAAO,CAACC,OAAQ,UAG7C,cAAC,IAAD,CAAQC,cAAe,CAACV,MAAO,IAAKW,iBAAkBd,EAAce,SAAU,SAACC,GAAD,OAtClE,SAACA,GACjBnB,GAAc,GACdoB,YAAQ,MAAOC,IAAaC,KAAKC,eAAgB,CAACjB,MAAOa,EAAOb,QAC9DkB,MAAK,SAACC,GACFA,GAAqC,MAAzBA,EAASC,aACxB1B,GAAc,GACd2B,YAAiB,UAAWF,EAASG,QAAS,WAC9C/B,EAAQgC,WAER7B,GAAc,GACd2B,YAAiB,QAASF,EAASG,QAAS,aAG7CE,OAAM,SAACC,GACPlC,EAAQgC,SACR7B,GAAc,GACdgC,QAAQC,IAAIF,EAAMN,UAClBE,YAAiB,QAAS,uBAAwB,YAqB0CT,CAASC,IAAnG,SACE,gBAAEe,EAAF,EAAEA,OAAF,OACA,eAAC,IAAD,WACC,0CACA,sBAAKzB,UAAU,mBAAf,UACC,cAAC,IAAD,CAAO0B,KAAK,OAAO1B,UAAS,uBAAkByB,EAAO5B,OAASL,EAAc,aAAe,IAAMmC,YAAY,QAAQC,KAAK,QAAQC,SAAU,IAC5I,cAAC,IAAD,CAAcD,KAAK,QAAnB,SAA4B,SAACE,GAAD,OAAS,qBAAK9B,UAAU,mBAAf,SAAmC8B,UAEzE,qBAAK9B,UAAU,yBAAf,SACC,wBAAQ0B,KAAK,SAASrB,MAAO,CAAC0B,MAAO,IAAKC,WAAY,QAAShC,UAAU,gCAAgCiC,QAAS,kBAAMxC,GAAe,IAAvI,yC,iCC/DK,QAA0B","file":"static/js/60.e6abf111.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {NavLink, Link} from \"react-router-dom\";\nimport {Formik, Field, Form, ErrorMessage} from \"formik\";\nimport * as Yup from \"yup\";\n\nimport {showNotification} from \"../../services/toasterService\";\nimport {callApi} from \"../../services/apiService\";\nimport {ApiConstants} from \"../../config/apiConstants\";\nimport Spinner from \"../../components/Spinner\";\n\nimport logo from \"../../assets/svgs/logo.svg\";\n\nconst SignIn = ({history}) => {\n\tconst [showLoader, setShowLoader] = useState(false);\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\n\tconst onSubmit = (values) => {\n\t\tsetShowLoader(true);\n\t\tcallApi(\"get\", ApiConstants.auth.forgotpassword, {email: values.email})\n\t\t\t.then((response) => {\n\t\t\t\tif (response && response.status_code === 200) {\n\t\t\t\t\tsetShowLoader(false);\n\t\t\t\t\tshowNotification(\"Success\", response.message, \"success\");\n\t\t\t\t\thistory.goBack();\n\t\t\t\t} else {\n\t\t\t\t\tsetShowLoader(false);\n\t\t\t\t\tshowNotification(\"Error\", response.message, \"error\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\thistory.goBack();\n\t\t\t\tsetShowLoader(false);\n\t\t\t\tconsole.log(error.response);\n\t\t\t\tshowNotification(\"Error\", \"Something went wrong\", \"error\");\n\t\t\t});\n\t};\n\tlet ForgotSchema = Yup.object().shape({\n\t\temail: Yup.string().required(\"Please enter Email \").email(\"Please enter a valid Email\"),\n\t});\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showLoader && <Spinner />}\n\t\t\t<div className=\"auth-content\">\n\t\t\t\t<div className=\"text-center mb-4 text-white\">\n\t\t\t\t\t<h4 className=\"text-white\">Forgot Password?</h4>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card rounded\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<div className=\"mb-3 text-center\">\n\t\t\t\t\t\t\t<Link to=\"/home\">\n\t\t\t\t\t\t\t\t<img src={logo} alt=\"Logo\" style={{height: 70}} />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Formik initialValues={{email: \"\"}} validationSchema={ForgotSchema} onSubmit={(values) => onSubmit(values)}>\n\t\t\t\t\t\t\t{({errors}) => (\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t\t\t\t<div className=\"input-group mb-3\">\n\t\t\t\t\t\t\t\t\t\t<Field type=\"text\" className={`form-control ${errors.email && isSubmitted ? \"is-invalid\" : \"\"}`} placeholder=\"Email\" name=\"email\" tabIndex={1} />\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage name=\"email\">{(msg) => <div className=\"invalid-feedback\">{msg}</div>}</ErrorMessage>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group text-center\">\n\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" style={{width: 180, fontWeight: \"bold\"}} className=\"btn btn-primary shadow-2 my-3\" onClick={() => setIsSubmitted(true)}>\n\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default SignIn;\n","export default __webpack_public_path__ + \"static/media/logo.3e0a7e23.svg\";"],"sourceRoot":""}